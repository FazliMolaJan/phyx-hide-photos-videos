apply plugin: 'com.android.application'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["compilesdk_version"]
    buildToolsVersion globalConfiguration["buildtools_version"]
    defaultConfig {
        applicationId "com.aganticsoft.phyxhidephotosandvideos"
        minSdkVersion globalConfiguration["minsdk_version"]
        targetSdkVersion globalConfiguration["targetsdk_version"]
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def library = rootProject.ext.dependencies
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation library.appCompat
    implementation library.appDesign
    testImplementation library.jUnit
    compile library.constraintLayout
    implementation library.dagger
    annotationProcessor library.daggerCompiler
    implementation library.daggerAndroid
    implementation library.daggerAndroidSupport
    annotationProcessor library.daggerAndroidProcessor
    implementation library.timber
    implementation library.picasso
    implementation library.roomRuntime
    annotationProcessor library.roomCompiler
    implementation library.lifecycleRuntime
    implementation library.lifecycleExtention
    annotationProcessor library.lifecycleCompiler
    implementation library.pinLock
    implementation library.butterKnife
    annotationProcessor library.butterKnifeCompiler
}
